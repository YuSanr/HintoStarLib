plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

group 'cn.hiaxnlib'
version '2.0.0-Beta-0.1'
repositories {
    mavenCentral()
    mavenLocal()
    maven {name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

var lib = project(":Lib")
var v754 = project(":LibVersion_754")
dependencies {
    compileOnly fileTree(dir: "./libuary",includes: ["spigot-1.16.5-R0.1-20210611.090701-17.jar"])
    compileOnly fileTree(dir: "./libuary",includes: ["PlaceHolderAPI-2.10.9.jar"])
    compileOnly fileTree(dir: "./libuary",includes: ["ProtocolLib.jar"])
    implementation lib
    implementation v754
//    implementation project(":LibVersion_498")
    implementation project(":LibVersion_340")
    implementation 'com.alibaba:fastjson:1.2.83'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.10"
}

def targetJavaVersion = 8
tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
    options.encoding = "UTF-8"
}
shadowJar{
    classifier = 'plugin'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
tasks.build{
//    classifier = 'sb'
}
